-- Archivo para importar la extructura database de supabase

-- Clean
DROP TABLE IF EXISTS public.sm_configuration;
DROP TABLE IF EXISTS public.sm_arcade_paths;
DROP TABLE IF EXISTS public.sm_arcade_credentials;
DROP TABLE IF EXISTS public.sm_pack;

-- Structure, policy and contraints
create table
  public.sm_arcade_paths (
    id bigint generated by default as identity,
    sm text not null,
    downloads text not null,
    config text not null,
    program text not null,
    constraint sm_arcade_paths_pkey primary key (id)
  ) tablespace pg_default;

create policy "sm_arcade_paths select"
on "public"."sm_arcade_paths"
to service_role
using (true);

create table
  public.sm_arcade_credentials (
    id bigint generated by default as identity,
    pixeldrain_key text not null,
    pixeldrain_secret text not null,
    constraint sm_arcade_credentials_pkey primary key (id)
  ) tablespace pg_default;

create policy "sm_arcade_credentials select"
on "public"."sm_arcade_credentials"
to service_role
using (true);

create table
  public.sm_configuration (
    id bigint generated by default as identity,
    name text not null,
    realize smallint not null,
    so character varying not null,
    sm character varying not null,
    fk_credentials bigint not null,
    fk_paths bigint not null,
    constraint sm_configuration_pkey primary key (id),
    constraint sm_configuration_fk_credentials_fkey foreign key (fk_credentials) references sm_arcade_credentials (id) on update cascade on delete cascade,
    constraint sm_configuration_fk_paths_fkey foreign key (fk_paths) references sm_arcade_paths (id) on update cascade on delete cascade
  ) tablespace pg_default;

create policy "sm_configuration select"
on "public"."sm_configuration"
to service_role
using (true);

create table
  public.sm_pack (
    id bigint generated by default as identity,
    link text not null,
    upload_date double precision not null,
    file text not null,
    password text not null,
    folder text not null,
    final_name text not null,
    md5 text not null,
    compress boolean not null default true,
    sm_configuration_id bigint not null,
    constraint sm_pack_pkey primary key (id),
    constraint fk_author foreign key(sm_configuration_id) references sm_configuration(id)
  ) tablespace pg_default;

create policy "sm_pack select"
on "public"."sm_pack"
to service_role
using (true);

-- Initial data
INSERT INTO public.sm_arcade_paths(
    sm,
    downloads,
    config,
    program)
VALUES(
    '/opt/NotITG-v4.2.0',
    '/opt/Downloads',
    '/opt/Downloads/sm_sync_config.json',
    '/opt/SmScript');

INSERT INTO public.sm_arcade_credentials(
    pixeldrain_key,
    pixeldrain_secret)
VALUES(
    '1234',
    'asdf');

INSERT INTO public.sm_configuration(
    name,
    realize,
    so,
    sm,
    fk_credentials,
    fk_paths)
VALUES(
    'arcade_center',
    1,
    'linux',
    'ITGmania',
    1,
    1);

INSERT INTO public.sm_pack(
    link,
    upload_date,
    file,
    password,
    folder,
    final_name,
    md5,
    compress,
    sm_configuration_id)
VALUES(
    'https://pixeldrain.com/u/235hg5r6zsr',
    1720112476,
    'adfgadfv df.7z',
    'xgfrae1234',
    '/Packages',
    'srgsgdftz.zip',
    '8a6fa1f79c87c32e2a541393719d6f1f',
    true,
    1);
